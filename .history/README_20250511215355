# Instrucciones para Ejecutar el Proyecto

Este proyecto incluye tres componentes principales: un servidor TCP (parte 1), un servidor Flask para obtener fecha y hora (parte 2), y clientes que interactúan con el sistema. Sigue los pasos en el orden indicado para evitar errores de conexión.

## 1. Compilar el Servidor

Desde el directorio principal del proyecto:

```bash
make clean
make
```

Esto compila el servidor `servidor` a partir de `server.c` y `server_utils.c`.

## 2. Ejecutar el Servidor Principal (Parte 1)

En una terminal:

```bash
./servidor -p 1700
```

Este comando inicia el servidor TCP en el puerto 1700. El servidor imprimirá algo como:

```
s> init server 0.0.0.0:1700
```

## 3. Ejecutar el Servidor Flask (Parte 2)

En una segunda terminal, ejecuta el servidor Flask que devuelve la fecha y hora:

```bash
python3 flask_datetime_server.py
```

El servidor debe estar escuchando en:

```
http://127.0.0.1:5052
```

Este paso es necesario antes de ejecutar los clientes, ya que cada comando del cliente obtiene la hora desde este servidor.

## 4. Ejecutar Cliente(s) (Parte 1)

En una tercera terminal (puedes abrir varias para distintos usuarios):

```bash
python3 client.py -s 127.0.0.1 -p 1700
```

Una vez dentro, verás el prompt `c>`, desde donde puedes ejecutar comandos como:

```
REGISTER nombre_usuario
CONNECT nombre_usuario
PUBLISH /ruta/absoluta/archivo.txt "descripción del archivo"
LIST_USERS
LIST_CONTENT nombre_usuario
GET_FILE nombre_usuario /ruta/remota.txt /ruta/local.txt
DELETE /ruta/absoluta/archivo.txt
DISCONNECT
UNREGISTER nombre_usuario
QUIT
```

## Notas

- Usamos siempre rutas absolutas para los ficheros.
- Se pueden ejecutar varios clientes simultáneamente, cada uno en una terminal.
- El servidor TCP debe estar activo antes de lanzar cualquier cliente.
- El servidor Flask debe estar en marcha para que los clientes funcionen correctamente.